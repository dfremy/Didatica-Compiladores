/**
 * generated by Xtext 2.10.0
 */
package org.xtext.example.entity.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.entity.EntityPackage;
import org.xtext.example.entity.expression;
import org.xtext.example.entity.expression_unity;
import org.xtext.example.entity.operator;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>expression</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@link org.xtext.example.entity.impl.expressionImpl#getExpressao_un <em>Expressao un</em>}</li>
 *   <li>{@link org.xtext.example.entity.impl.expressionImpl#getOperador <em>Operador</em>}</li>
 *   <li>{@link org.xtext.example.entity.impl.expressionImpl#getExpressao <em>Expressao</em>}</li>
 * </ul>
 * </p>
 *
 * @generated
 */
public class expressionImpl extends MinimalEObjectImpl.Container implements expression
{
  /**
   * The cached value of the '{@link #getExpressao_un() <em>Expressao un</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExpressao_un()
   * @generated
   * @ordered
   */
  protected expression_unity expressao_un;

  /**
   * The cached value of the '{@link #getOperador() <em>Operador</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOperador()
   * @generated
   * @ordered
   */
  protected operator operador;

  /**
   * The cached value of the '{@link #getExpressao() <em>Expressao</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExpressao()
   * @generated
   * @ordered
   */
  protected expression expressao;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected expressionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return EntityPackage.Literals.EXPRESSION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public expression_unity getExpressao_un()
  {
    return expressao_un;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetExpressao_un(expression_unity newExpressao_un, NotificationChain msgs)
  {
    expression_unity oldExpressao_un = expressao_un;
    expressao_un = newExpressao_un;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, EntityPackage.EXPRESSION__EXPRESSAO_UN, oldExpressao_un, newExpressao_un);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setExpressao_un(expression_unity newExpressao_un)
  {
    if (newExpressao_un != expressao_un)
    {
      NotificationChain msgs = null;
      if (expressao_un != null)
        msgs = ((InternalEObject)expressao_un).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - EntityPackage.EXPRESSION__EXPRESSAO_UN, null, msgs);
      if (newExpressao_un != null)
        msgs = ((InternalEObject)newExpressao_un).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - EntityPackage.EXPRESSION__EXPRESSAO_UN, null, msgs);
      msgs = basicSetExpressao_un(newExpressao_un, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EntityPackage.EXPRESSION__EXPRESSAO_UN, newExpressao_un, newExpressao_un));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public operator getOperador()
  {
    return operador;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetOperador(operator newOperador, NotificationChain msgs)
  {
    operator oldOperador = operador;
    operador = newOperador;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, EntityPackage.EXPRESSION__OPERADOR, oldOperador, newOperador);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setOperador(operator newOperador)
  {
    if (newOperador != operador)
    {
      NotificationChain msgs = null;
      if (operador != null)
        msgs = ((InternalEObject)operador).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - EntityPackage.EXPRESSION__OPERADOR, null, msgs);
      if (newOperador != null)
        msgs = ((InternalEObject)newOperador).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - EntityPackage.EXPRESSION__OPERADOR, null, msgs);
      msgs = basicSetOperador(newOperador, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EntityPackage.EXPRESSION__OPERADOR, newOperador, newOperador));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public expression getExpressao()
  {
    return expressao;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetExpressao(expression newExpressao, NotificationChain msgs)
  {
    expression oldExpressao = expressao;
    expressao = newExpressao;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, EntityPackage.EXPRESSION__EXPRESSAO, oldExpressao, newExpressao);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setExpressao(expression newExpressao)
  {
    if (newExpressao != expressao)
    {
      NotificationChain msgs = null;
      if (expressao != null)
        msgs = ((InternalEObject)expressao).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - EntityPackage.EXPRESSION__EXPRESSAO, null, msgs);
      if (newExpressao != null)
        msgs = ((InternalEObject)newExpressao).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - EntityPackage.EXPRESSION__EXPRESSAO, null, msgs);
      msgs = basicSetExpressao(newExpressao, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EntityPackage.EXPRESSION__EXPRESSAO, newExpressao, newExpressao));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case EntityPackage.EXPRESSION__EXPRESSAO_UN:
        return basicSetExpressao_un(null, msgs);
      case EntityPackage.EXPRESSION__OPERADOR:
        return basicSetOperador(null, msgs);
      case EntityPackage.EXPRESSION__EXPRESSAO:
        return basicSetExpressao(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case EntityPackage.EXPRESSION__EXPRESSAO_UN:
        return getExpressao_un();
      case EntityPackage.EXPRESSION__OPERADOR:
        return getOperador();
      case EntityPackage.EXPRESSION__EXPRESSAO:
        return getExpressao();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case EntityPackage.EXPRESSION__EXPRESSAO_UN:
        setExpressao_un((expression_unity)newValue);
        return;
      case EntityPackage.EXPRESSION__OPERADOR:
        setOperador((operator)newValue);
        return;
      case EntityPackage.EXPRESSION__EXPRESSAO:
        setExpressao((expression)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case EntityPackage.EXPRESSION__EXPRESSAO_UN:
        setExpressao_un((expression_unity)null);
        return;
      case EntityPackage.EXPRESSION__OPERADOR:
        setOperador((operator)null);
        return;
      case EntityPackage.EXPRESSION__EXPRESSAO:
        setExpressao((expression)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case EntityPackage.EXPRESSION__EXPRESSAO_UN:
        return expressao_un != null;
      case EntityPackage.EXPRESSION__OPERADOR:
        return operador != null;
      case EntityPackage.EXPRESSION__EXPRESSAO:
        return expressao != null;
    }
    return super.eIsSet(featureID);
  }

} //expressionImpl
